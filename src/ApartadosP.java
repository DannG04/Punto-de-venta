
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author 76905
 */
public class ApartadosP extends javax.swing.JPanel {
//cc
    DefaultTableModel modeloAp = new DefaultTableModel();
    DefaultTableModel modeloProdAp = new DefaultTableModel();
    DefaultTableModel modeloProd = new DefaultTableModel();
    DefaultTableModel modeloCli = new DefaultTableModel();
    
    ConexionBD conect = new ConexionBD();
    String id_apartado = "";
    boolean ins = true;
    
    public ApartadosP() {
        initComponents();
        modeloAp = (DefaultTableModel)tablaAp.getModel();
        modeloProdAp = (DefaultTableModel)tablaProdAp.getModel();
        modeloProd = (DefaultTableModel)tablaProd.getModel();
        modeloCli = (DefaultTableModel)tablaCli.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        saldarDialog = new javax.swing.JDialog();
        panelSald = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        idApF = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        cantSaldaF = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        recSaldF = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        cambCT = new javax.swing.JFormattedTextField();
        regSaldasion = new javax.swing.JButton();
        prodApartadoDialog = new javax.swing.JDialog();
        panelApart = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaProdAp = new javax.swing.JTable();
        panelRegProd = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        codP = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        cantP = new javax.swing.JFormattedTextField();
        agP = new javax.swing.JButton();
        acP = new javax.swing.JButton();
        elP = new javax.swing.JButton();
        heP = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaProd = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        guardarApDialog = new javax.swing.JDialog();
        panelApartado = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        totF = new javax.swing.JFormattedTextField();
        cantMinLabel = new javax.swing.JLabel();
        cantMinF = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        cantPagF = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        vigF = new javax.swing.JFormattedTextField();
        hechoB4 = new javax.swing.JButton();
        hechoB5 = new javax.swing.JButton();
        regApartDialog = new javax.swing.JDialog();
        panelRegAp1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        curpCliente = new javax.swing.JFormattedTextField();
        regC = new javax.swing.JButton();
        labelinc = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCli = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        regAp = new javax.swing.JButton();
        sald = new javax.swing.JButton();
        canc = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        buskAp = new javax.swing.JFormattedTextField();
        sumLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAp = new javax.swing.JTable();

        saldarDialog.setTitle("Registro de Apartados");
        saldarDialog.setAlwaysOnTop(true);
        saldarDialog.setMinimumSize(new java.awt.Dimension(400, 350));
        saldarDialog.setModal(true);
        saldarDialog.setResizable(false);
        saldarDialog.setSize(new java.awt.Dimension(400, 350));
        saldarDialog.getContentPane().setLayout(new java.awt.CardLayout());

        panelSald.setLayout(new java.awt.GridLayout(0, 1));

        jLabel12.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(78, 150, 150));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("ID Apartado:");
        panelSald.add(jLabel12);

        idApF.setEditable(false);
        idApF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idApF.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        idApF.setPreferredSize(new java.awt.Dimension(150, 30));
        panelSald.add(idApF);

        jLabel13.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(78, 150, 150));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Salda con:");
        panelSald.add(jLabel13);

        cantSaldaF.setEditable(false);
        cantSaldaF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cantSaldaF.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        cantSaldaF.setPreferredSize(new java.awt.Dimension(150, 30));
        panelSald.add(cantSaldaF);

        jLabel14.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(78, 150, 150));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Recibido:");
        panelSald.add(jLabel14);

        recSaldF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recSaldF.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        recSaldF.setPreferredSize(new java.awt.Dimension(150, 30));
        recSaldF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                recSaldFKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                recSaldFKeyTyped(evt);
            }
        });
        panelSald.add(recSaldF);

        jLabel15.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(78, 150, 150));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Cambio: $");
        panelSald.add(jLabel15);

        cambCT.setEditable(false);
        cambCT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cambCT.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        cambCT.setPreferredSize(new java.awt.Dimension(200, 35));
        panelSald.add(cambCT);

        regSaldasion.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        regSaldasion.setForeground(new java.awt.Color(78, 150, 150));
        regSaldasion.setText("Saldar");
        regSaldasion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regSaldasionActionPerformed(evt);
            }
        });
        panelSald.add(regSaldasion);

        saldarDialog.getContentPane().add(panelSald, "card4");

        saldarDialog.setLocationRelativeTo(null);

        prodApartadoDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        prodApartadoDialog.setTitle("Registro de Apartados");
        prodApartadoDialog.setAlwaysOnTop(true);
        prodApartadoDialog.setMinimumSize(new java.awt.Dimension(1400, 550));
        prodApartadoDialog.setModal(true);
        prodApartadoDialog.setPreferredSize(new java.awt.Dimension(1400, 550));
        prodApartadoDialog.setSize(new java.awt.Dimension(1000, 460));
        prodApartadoDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                prodApartadoDialogWindowClosing(evt);
            }
        });
        prodApartadoDialog.getContentPane().setLayout(new java.awt.CardLayout());

        panelApart.setLayout(new java.awt.BorderLayout());

        tablaProdAp.setFont(new java.awt.Font("Noto Serif", 0, 16)); // NOI18N
        tablaProdAp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Cantidad", "Precio Unitario", "Precio Total", "Tipo de Venta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tablaProdAp);

        panelApart.add(jScrollPane6, java.awt.BorderLayout.EAST);

        panelRegProd.setLayout(new java.awt.GridLayout(0, 1));

        jLabel16.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(78, 150, 150));
        jLabel16.setText("CÃ³digo:");
        panelRegProd.add(jLabel16);

        codP.setEditable(false);
        codP.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        codP.setPreferredSize(new java.awt.Dimension(150, 30));
        panelRegProd.add(codP);

        jLabel17.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(78, 150, 150));
        jLabel17.setText("Cantidad:");
        panelRegProd.add(jLabel17);

        cantP.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        cantP.setPreferredSize(new java.awt.Dimension(150, 30));
        cantP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantPKeyTyped(evt);
            }
        });
        panelRegProd.add(cantP);

        agP.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        agP.setForeground(new java.awt.Color(78, 150, 150));
        agP.setText("Agregar");
        agP.setPreferredSize(new java.awt.Dimension(125, 33));
        agP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agPActionPerformed(evt);
            }
        });
        panelRegProd.add(agP);

        acP.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        acP.setForeground(new java.awt.Color(78, 150, 150));
        acP.setText("Actualizar");
        acP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acPActionPerformed(evt);
            }
        });
        panelRegProd.add(acP);

        elP.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        elP.setForeground(new java.awt.Color(78, 150, 150));
        elP.setText("Eliminar");
        elP.setPreferredSize(new java.awt.Dimension(125, 33));
        elP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elPActionPerformed(evt);
            }
        });
        panelRegProd.add(elP);

        heP.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        heP.setForeground(new java.awt.Color(78, 150, 150));
        heP.setText("Hecho");
        heP.setPreferredSize(new java.awt.Dimension(125, 33));
        heP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hePActionPerformed(evt);
            }
        });
        panelRegProd.add(heP);

        panelApart.add(panelRegProd, java.awt.BorderLayout.CENTER);

        jScrollPane7.setMinimumSize(new java.awt.Dimension(550, 402));
        jScrollPane7.setPreferredSize(new java.awt.Dimension(550, 402));
        jScrollPane7.setVerifyInputWhenFocusTarget(false);

        tablaProd.setFont(new java.awt.Font("Noto Serif", 0, 16)); // NOI18N
        tablaProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProdMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tablaProd);

        panelApart.add(jScrollPane7, java.awt.BorderLayout.WEST);

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setFont(new java.awt.Font("Noto Serif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(78, 150, 150));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Productos");
        jPanel3.add(jLabel1);

        jLabel2.setFont(new java.awt.Font("Noto Serif", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(78, 150, 150));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Productos Apartados");
        jPanel3.add(jLabel2);

        panelApart.add(jPanel3, java.awt.BorderLayout.NORTH);

        prodApartadoDialog.getContentPane().add(panelApart, "card3");

        prodApartadoDialog.setLocationRelativeTo(null);

        guardarApDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        guardarApDialog.setTitle("Registro de Apartados");
        guardarApDialog.setAlwaysOnTop(true);
        guardarApDialog.setMinimumSize(new java.awt.Dimension(400, 400));
        guardarApDialog.setModal(true);
        guardarApDialog.setResizable(false);
        guardarApDialog.setSize(new java.awt.Dimension(400, 400));
        guardarApDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                guardarApDialogWindowClosing(evt);
            }
        });
        guardarApDialog.getContentPane().setLayout(new java.awt.CardLayout());

        panelApartado.setLayout(new java.awt.GridLayout(0, 1));

        jLabel9.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(78, 150, 150));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Total:");
        panelApartado.add(jLabel9);

        totF.setEditable(false);
        totF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        totF.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        totF.setPreferredSize(new java.awt.Dimension(200, 35));
        panelApartado.add(totF);

        cantMinLabel.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        cantMinLabel.setForeground(new java.awt.Color(78, 150, 150));
        cantMinLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cantMinLabel.setText("Cantidad mÃ­nima a pagar:");
        panelApartado.add(cantMinLabel);

        cantMinF.setEditable(false);
        cantMinF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cantMinF.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        cantMinF.setPreferredSize(new java.awt.Dimension(200, 35));
        panelApartado.add(cantMinF);

        jLabel10.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(78, 150, 150));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Cantidad Pagada:");
        panelApartado.add(jLabel10);

        cantPagF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cantPagF.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        cantPagF.setPreferredSize(new java.awt.Dimension(150, 30));
        cantPagF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantPagFKeyTyped(evt);
            }
        });
        panelApartado.add(cantPagF);

        jLabel11.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(78, 150, 150));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Vigencia:");
        panelApartado.add(jLabel11);

        vigF.setEditable(false);
        vigF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vigF.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        vigF.setPreferredSize(new java.awt.Dimension(150, 30));
        panelApartado.add(vigF);

        hechoB4.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        hechoB4.setForeground(new java.awt.Color(78, 150, 150));
        hechoB4.setText("Registrar");
        hechoB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hechoB4ActionPerformed(evt);
            }
        });
        panelApartado.add(hechoB4);

        hechoB5.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        hechoB5.setForeground(new java.awt.Color(78, 150, 150));
        hechoB5.setText("Volver");
        hechoB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hechoB5ActionPerformed(evt);
            }
        });
        panelApartado.add(hechoB5);

        guardarApDialog.getContentPane().add(panelApartado, "card3");

        guardarApDialog.setLocationRelativeTo(null);

        regApartDialog.setTitle("Registro de Apartados");
        regApartDialog.setAlwaysOnTop(true);
        regApartDialog.setMinimumSize(new java.awt.Dimension(500, 500));
        regApartDialog.setModal(true);
        regApartDialog.setResizable(false);
        regApartDialog.setSize(new java.awt.Dimension(500, 500));
        regApartDialog.getContentPane().setLayout(new java.awt.CardLayout());

        panelRegAp1.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(78, 150, 150));
        jLabel5.setText("CURP cliente:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelRegAp1.add(jLabel5, gridBagConstraints);

        curpCliente.setEditable(false);
        curpCliente.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        curpCliente.setPreferredSize(new java.awt.Dimension(250, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelRegAp1.add(curpCliente, gridBagConstraints);

        regC.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        regC.setForeground(new java.awt.Color(78, 150, 150));
        regC.setText("Registrar");
        regC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regCActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 10, 10);
        panelRegAp1.add(regC, gridBagConstraints);

        labelinc.setFont(new java.awt.Font("Noto Serif", 0, 12)); // NOI18N
        labelinc.setForeground(new java.awt.Color(204, 0, 51));
        labelinc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelinc.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        panelRegAp1.add(labelinc, gridBagConstraints);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(450, 300));

        tablaCli.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        tablaCli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Curp", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCliMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaCli);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        panelRegAp1.add(jScrollPane2, gridBagConstraints);

        regApartDialog.getContentPane().add(panelRegAp1, "card2");

        regApartDialog.setLocationRelativeTo(null);

        setLayout(new java.awt.BorderLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(150, 165));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        regAp.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        regAp.setForeground(new java.awt.Color(78, 150, 150));
        regAp.setText("Registrar");
        regAp.setPreferredSize(new java.awt.Dimension(125, 35));
        regAp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regApActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(regAp, gridBagConstraints);

        sald.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        sald.setForeground(new java.awt.Color(78, 150, 150));
        sald.setText("Saldar");
        sald.setPreferredSize(new java.awt.Dimension(125, 35));
        sald.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(sald, gridBagConstraints);

        canc.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        canc.setForeground(new java.awt.Color(78, 150, 150));
        canc.setText("Cancelar");
        canc.setPreferredSize(new java.awt.Dimension(125, 35));
        canc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(canc, gridBagConstraints);

        add(jPanel2, java.awt.BorderLayout.EAST);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Noto Serif", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(78, 150, 150));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Sistema de Apartados");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(jLabel7, gridBagConstraints);

        buskAp.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        buskAp.setPreferredSize(new java.awt.Dimension(1300, 30));
        buskAp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buskApKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                buskApKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        jPanel1.add(buskAp, gridBagConstraints);

        sumLabel.setBackground(new java.awt.Color(255, 255, 255));
        sumLabel.setFont(new java.awt.Font("Noto Serif", 1, 20)); // NOI18N
        sumLabel.setForeground(new java.awt.Color(78, 150, 150));
        sumLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sumLabel.setText("Buscar:");
        sumLabel.setPreferredSize(new java.awt.Dimension(81, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(sumLabel, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        tablaAp.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        tablaAp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apartado", "Empleado", "Cliente", "Inicio", "Limite", "Dado", "Faltante", "Total", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaAp);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void regApActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regApActionPerformed
        mostrarTablaCli();
        regApartDialog.setVisible(true);
    }//GEN-LAST:event_regApActionPerformed

    private void saldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saldActionPerformed
        if(tablaAp.getSelectedRow() != -1){
            idApF.setText("" + tablaAp.getValueAt(tablaAp.getSelectedRow(), 0));
            cantSaldaF.setText("" + tablaAp.getValueAt(tablaAp.getSelectedRow(), 6));
            recSaldF.setText("");
            cambCT.setText("");
            saldarDialog.setVisible(true);
        } else{
            Mise.JOption("Seleccione la fila que desea saldar", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saldActionPerformed

    private void hechoB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hechoB4ActionPerformed
        if(!cantPagF.getText().isEmpty()){
            double a = Double.parseDouble(cantPagF.getText());
            double b = Double.parseDouble(cantMinF.getText());
            if(a >= b){
                if(conect.actualizarApartado(id_apartado, Double.valueOf(cantPagF.getText()))){
                    guardarApDialog.setVisible(false);
                    mostrarTablaAp("");
                    GenTicket.generarTicketApartado(conect.seleccionarApartado(id_apartado));
                }
            } else{
                Mise.JOption("El pago debe ser mayor o igual a la cantidad mÃ­nima a pagar", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else{
            Mise.JOption("LLene todos los campos", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_hechoB4ActionPerformed

    private void regSaldasionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regSaldasionActionPerformed
        if(!recSaldF.getText().isEmpty()){
            if(Double.parseDouble(recSaldF.getText()) >= Double.parseDouble(cantSaldaF.getText())){
                conect.entregarApartado(idApF.getText());
                mostrarTablaAp("");                
                GenTicket.generarTicketProductos(conect.seleccionarProductos(id_apartado));
                saldarDialog.setVisible(false);
            } else{
                Mise.JOption("Lo recibido debe ser mayor o igual a la cantidad con la que salda", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else{
            Mise.JOption("Debe llenar todos los campos", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_regSaldasionActionPerformed

    private void buskApKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buskApKeyReleased
        if(!buskAp.getText().isEmpty()){
            mostrarTablaAp("SELECT * FROM apartado WHERE id_apartado LIKE '%" + buskAp.getText() + "%' ORDER BY id_apartado;");
        }
        if(evt.getKeyChar() == java.awt.event.KeyEvent.VK_BACK_SPACE){
            mostrarTablaAp("SELECT * FROM apartado WHERE id_apartado LIKE '%" + buskAp.getText() + "%' ORDER BY id_apartado;");
        }
    }//GEN-LAST:event_buskApKeyReleased

    private void buskApKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buskApKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.letrasMayus(letra) && !Cake.letrasMinus(letra) && !Cake.numeros(letra) && !(Cake.inicioEspacios(letra))){
            evt.consume();
        }

        if(!(buskAp.getText().isEmpty())){
            if(Cake.espacios(buskAp.getText(), letra)){
                evt.consume();
            }   
        }
        else{
            if(Cake.inicioEspacios(letra)){
                evt.consume();
            }
        }

        if(Cake.tamaÃ±o(buskAp.getText(), 30)){
            evt.consume();
        }
    }//GEN-LAST:event_buskApKeyTyped

    private void recSaldFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recSaldFKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.numeros(letra) && !Cake.inicioPunto(letra)){
            evt.consume();
        }
        
        if(!(recSaldF.getText().isEmpty())){
            if(Cake.hayPuntos(recSaldF.getText()) && letra=='.'){
                evt.consume();
            } else{
                if(Cake.punto(recSaldF.getText(), letra)){
                    evt.consume();
                }
            }
        } else{
            if(Cake.inicioPunto(letra)){
                evt.consume();
            }
        }
        
        if(Cake.tamaÃ±o(recSaldF.getText(), 10)){
            evt.consume();
        }
    }//GEN-LAST:event_recSaldFKeyTyped

    private void recSaldFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recSaldFKeyReleased
        if(!recSaldF.getText().isEmpty()){
            cambCT.setText("" + cambioT(recSaldF.getText()));
        }
    }//GEN-LAST:event_recSaldFKeyReleased

    private void cantPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantPKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.numeros(letra)){
            evt.consume();
        }

        if(Cake.tamaÃ±o(cantP.getText(), 10)){
            evt.consume();
        }
    }//GEN-LAST:event_cantPKeyTyped

    private void agPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agPActionPerformed
        if(codP.getText().isEmpty() || cantP.getText().isEmpty()){
            Mise.JOption("Debe llenar todos los campos", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        } else{
            String[] campos = {id_apartado, codP.getText(), cantP.getText()};
            conect.insertarProdApartado(campos, ins);
            ins = true;
            codP.setText("");
            cantP.setText("");
        }
        mostrarTablaProdA();
    }//GEN-LAST:event_agPActionPerformed

    private void acPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acPActionPerformed
        if(tablaProdAp.getSelectedRow() == -1){
            Mise.JOption("Seleccione la fila de la tabla de Productos Apartados que desea actualizar", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        } else{
            codP.setText("" + tablaProdAp.getValueAt(tablaProdAp.getSelectedRow(), 0));
            cantP.setText("" + tablaProdAp.getValueAt(tablaProdAp.getSelectedRow(), 1));
            ins = false;
        }
    }//GEN-LAST:event_acPActionPerformed

    private void elPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elPActionPerformed
        if(tablaProdAp.getSelectedRow() == -1){
            Mise.JOption("Seleccione la fila de la tabla de Productos Apartados que desea eliminar", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        } else{
            String[] campos = {id_apartado, "" + tablaProdAp.getValueAt(tablaProdAp.getSelectedRow(), 0)};
            conect.eliminarProdApartado(campos);
            mostrarTablaProdA();
        }
    }//GEN-LAST:event_elPActionPerformed

    private void prodApartadoDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_prodApartadoDialogWindowClosing
        if(modeloProdAp.getRowCount() == 0){
            int res = Mise.JOptionYesNo("No registrÃ³ ningun producto, Â¿seguro que desea cerrar esta ventana?"
                + "\n(al realizar esta acciÃ³n el apartado no podrÃ¡ guardarse)", "Cerrar ventana");
            if(res == 0){
                conect.eliminarApartado(id_apartado);
                prodApartadoDialog.setVisible(false);
            }
        }
    }//GEN-LAST:event_prodApartadoDialogWindowClosing

    private void cantPagFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantPagFKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.numeros(letra) && !Cake.inicioPunto(letra)){
            evt.consume();
        }
        
        if(!(cantPagF.getText().isEmpty())){
            if(Cake.hayPuntos(cantPagF.getText()) && letra=='.'){
                evt.consume();
            } else{
                if(Cake.punto(cantPagF.getText(), letra)){
                    evt.consume();
                }
            }
        } else{
            if(Cake.inicioPunto(letra)){
                evt.consume();
            }
        }
        
        if(Cake.tamaÃ±o(cantPagF.getText(), 10)){
            evt.consume();
        }
    }//GEN-LAST:event_cantPagFKeyTyped

    private void guardarApDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_guardarApDialogWindowClosing
        if(modeloProdAp.getRowCount() != 0){
            Mise.JOption("No ha registrado el apartado, no es posible cerrar la ventana."
                    + "\nSi desea cancelar el apartado debe registrarlo y depuÃ©s cancelarlo, o eliminar todos los productos que registrÃ³ anteriormente.", "Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_guardarApDialogWindowClosing

    private void cancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancActionPerformed
        if(tablaAp.getSelectedRow() != -1){
            id_apartado = "" + tablaAp.getValueAt(tablaAp.getSelectedRow(), 0);
            double mon = conect.cantidadCancelarApartado(id_apartado);
            double tor = (double) tablaAp.getValueAt(tablaAp.getSelectedRow(), 5) - mon;
            int res = Mise.JOptionYesNo("Â¿Seguro que desea cancelar el apartado? Dada la cantidad recibida y la cantidad de dias que han pasado,\n"
                    + " se le cobrarÃ¡n $" + mon + " y se le dovolerÃ¡n $" + tor, "Confirmar");
            if(res == 0){
                conect.cancelarApartado(id_apartado);
            }
        } else{
            Mise.JOption("Seleccione la fila del apartado que desea cancelar", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cancActionPerformed

    private void hechoB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hechoB5ActionPerformed
        guardarApDialog.setVisible(false);
        prodApartadoDialog.setVisible(true);
    }//GEN-LAST:event_hechoB5ActionPerformed

    private void hePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hePActionPerformed
        if(modeloProdAp.getRowCount() != 0){
            prodApartadoDialog.setVisible(false);
            datosAp();
            guardarApDialog.setVisible(true);
        } else{
            Mise.JOption("No puede registrar un apartado sin productos", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_hePActionPerformed

    private void regCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regCActionPerformed
        if(curpCliente.getText().isEmpty()){
            labelinc.setText("Debe rellenar el campo");
        } else{
            String[] campos = {Interfaz.idVendedor, curpCliente.getText()};
            id_apartado = conect.insertarApartado(campos);
            regApartDialog.setVisible(false);
            Mise.limpiarTabla(modeloProdAp);
            mostrarTablaPro();
            curpCliente.setText("");
            codP.setText("");
            cantP.setText("");
            prodApartadoDialog.setVisible(true);
        }
    }//GEN-LAST:event_regCActionPerformed

    private void tablaCliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCliMouseClicked
        curpCliente.setText("" + tablaCli.getValueAt(tablaCli.getSelectedRow(), 0));
    }//GEN-LAST:event_tablaCliMouseClicked

    private void tablaProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProdMouseClicked
        codP.setText("" + tablaProd.getValueAt(tablaProd.getSelectedRow(), 0));
    }//GEN-LAST:event_tablaProdMouseClicked

    public Double cambioT(String palabra){
        Double precT = Double.valueOf(cantSaldaF.getText());
        Double cambioNum = Double.valueOf(palabra);
        if(cambioNum >= precT){
            cambioNum = cambioNum-precT;
        } else {
            cambioNum = 0.0;
        }
        return cambioNum;
    }
    
    public void mostrarTablaAp(String instruccion){
        if(instruccion.equals("")){
            instruccion = "SELECT * FROM apartado ORDER BY id_apartado";
        }
        Mise.limpiarTabla(modeloAp);
        java.sql.ResultSet rs = conect.query(instruccion);
        if(rs != null){
            try{
                while(rs.next()){
                    modeloAp.addRow(new Object[]{rs.getString("id_apartado"), rs.getString("id_empleado"), rs.getString("id_cliente"), rs.getDate("fecha_inicio"),
                        rs.getDate("fecha_limite"), rs.getDouble("cantidad_dada"), rs.getDouble("cantidad_faltante"), rs.getDouble("cantidad_total"),rs.getString("estado")});
                }
            }catch(java.sql.SQLException e){
                System.out.println("Error al mostrar la tabla apartados");
            }
        }
    }
    
    public void mostrarTablaProdA(){
        Mise.limpiarTabla(modeloProdAp);
        java.sql.ResultSet rs = conect.query("SELECT * FROM apartado_detalle WHERE id_apartado='" + id_apartado + "';");
        if(rs != null){
            try{
                while(rs.next()){
                    modeloProdAp.addRow(new Object[]{rs.getString("id_producto"), rs.getInt("cantidad"),
                        rs.getDouble("precio_unitario"), rs.getDouble("precio_total"), rs.getString("tipo")});
                }
            }catch(java.sql.SQLException e){
                System.out.println("Error al mostrar la tabla apartados");
            }
        }
    }
    
    public void mostrarTablaPro(){
        Mise.limpiarTabla(modeloProd);
        java.sql.ResultSet rs = conect.query("SELECT * FROM producto ORDER BY id_producto");
        if(rs != null){
            try{
                while(rs.next()){
                    modeloProd.addRow(new Object[]{rs.getString("id_producto"), rs.getString("nombre")});
                }
            }catch(java.sql.SQLException e){
                System.out.println("Error al mostrar la tabla producto");
            }
        }
    }
    
    public void mostrarTablaCli(){
        Mise.limpiarTabla(modeloCli);
        java.sql.ResultSet rs = conect.query("SELECT * FROM cliente WHERE estatus='Activo'");
        if(rs != null){
            try{
                while(rs.next()){
                    modeloCli.addRow(new Object[]{rs.getString("id_cliente"), rs.getString("nombre")});
                }
            }catch(java.sql.SQLException e){
                System.out.println("Error al mostrar la tabla clientes");
            }
        }
    }
    
    public void datosAp(){
        java.sql.ResultSet rs = conect.query("SELECT * FROM apartado WHERE id_apartado='" + id_apartado + "';");
        if(rs != null){
            try{
                while(rs.next()){
                    totF.setText("" + rs.getDouble("cantidad_total"));
                    cantMinF.setText("" + rs.getDouble("cantidad_total")/2);
                    cantPagF.setText("");
                    vigF.setText("" + rs.getDate("fecha_limite"));
                }
            }catch(java.sql.SQLException e){
                System.out.println("Error al mostrar los datos de apartado");
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acP;
    private javax.swing.JButton agP;
    private javax.swing.JFormattedTextField buskAp;
    private javax.swing.JFormattedTextField cambCT;
    private javax.swing.JButton canc;
    private javax.swing.JFormattedTextField cantMinF;
    private javax.swing.JLabel cantMinLabel;
    private javax.swing.JFormattedTextField cantP;
    private javax.swing.JFormattedTextField cantPagF;
    private javax.swing.JFormattedTextField cantSaldaF;
    private javax.swing.JFormattedTextField codP;
    private javax.swing.JFormattedTextField curpCliente;
    private javax.swing.JButton elP;
    private javax.swing.JDialog guardarApDialog;
    private javax.swing.JButton heP;
    private javax.swing.JButton hechoB4;
    private javax.swing.JButton hechoB5;
    private javax.swing.JFormattedTextField idApF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    public static javax.swing.JLabel labelinc;
    private javax.swing.JPanel panelApart;
    private javax.swing.JPanel panelApartado;
    private javax.swing.JPanel panelRegAp1;
    private javax.swing.JPanel panelRegProd;
    private javax.swing.JPanel panelSald;
    private javax.swing.JDialog prodApartadoDialog;
    private javax.swing.JFormattedTextField recSaldF;
    private javax.swing.JButton regAp;
    private javax.swing.JDialog regApartDialog;
    private javax.swing.JButton regC;
    private javax.swing.JButton regSaldasion;
    private javax.swing.JButton sald;
    private javax.swing.JDialog saldarDialog;
    private javax.swing.JLabel sumLabel;
    private javax.swing.JTable tablaAp;
    private javax.swing.JTable tablaCli;
    private javax.swing.JTable tablaProd;
    private javax.swing.JTable tablaProdAp;
    private javax.swing.JFormattedTextField totF;
    private javax.swing.JFormattedTextField vigF;
    // End of variables declaration//GEN-END:variables
}
