
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author 76905
 */
public class InventarioP extends javax.swing.JPanel {

    static DefaultTableModel modelo = new DefaultTableModel();
    
    ConexionBD conect = new ConexionBD();
    
    /**
     * Creates new form Inventario
     */
    public InventarioP() {
        initComponents();
        modelo=(DefaultTableModel)tablaVentas.getModel();
        mostrarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jDialog1 = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        codp = new javax.swing.JFormattedTextField();
        nom = new javax.swing.JFormattedTextField();
        precU = new javax.swing.JFormattedTextField();
        precM = new javax.swing.JFormattedTextField();
        cadd = new javax.swing.JFormattedTextField();
        hechoIns = new javax.swing.JButton();
        hechoAct = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buskProd = new javax.swing.JFormattedTextField();
        botonBusk = new javax.swing.JToggleButton();
        panelBotones = new javax.swing.JPanel();
        agB = new javax.swing.JButton();
        eliB = new javax.swing.JButton();
        actB = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVentas = new javax.swing.JTable();

        jDialog1.setModal(true);
        jDialog1.setSize(new java.awt.Dimension(490, 390));
        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(78, 150, 150));
        jLabel2.setText("CÃ³digo del Producto:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jDialog1.getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(78, 150, 150));
        jLabel3.setText("Nombre: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jDialog1.getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(78, 150, 150));
        jLabel4.setText("Precio Mayoreo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jDialog1.getContentPane().add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(78, 150, 150));
        jLabel5.setText("Cantidad: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jDialog1.getContentPane().add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(78, 150, 150));
        jLabel6.setText("Precio Menudeo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jDialog1.getContentPane().add(jLabel6, gridBagConstraints);

        codp.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        codp.setPreferredSize(new java.awt.Dimension(200, 35));
        codp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codpKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jDialog1.getContentPane().add(codp, gridBagConstraints);

        nom.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        nom.setPreferredSize(new java.awt.Dimension(200, 35));
        nom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nomKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jDialog1.getContentPane().add(nom, gridBagConstraints);

        precU.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        precU.setPreferredSize(new java.awt.Dimension(200, 35));
        precU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precUKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jDialog1.getContentPane().add(precU, gridBagConstraints);

        precM.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        precM.setPreferredSize(new java.awt.Dimension(200, 35));
        precM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precMKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jDialog1.getContentPane().add(precM, gridBagConstraints);

        cadd.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        cadd.setPreferredSize(new java.awt.Dimension(200, 35));
        cadd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                caddKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jDialog1.getContentPane().add(cadd, gridBagConstraints);

        hechoIns.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        hechoIns.setForeground(new java.awt.Color(78, 150, 150));
        hechoIns.setText("Hecho");
        hechoIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hechoInsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 10, 10);
        jDialog1.getContentPane().add(hechoIns, gridBagConstraints);
        hechoIns.setVisible(false);

        hechoAct.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        hechoAct.setForeground(new java.awt.Color(78, 150, 150));
        hechoAct.setText("Hecho");
        hechoAct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hechoActActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 10, 10);
        jDialog1.getContentPane().add(hechoAct, gridBagConstraints);
        hechoAct.setVisible(false);

        jDialog1.setLocationRelativeTo(null);

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Noto Serif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(78, 150, 150));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Inventario");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(jLabel1, gridBagConstraints);

        buskProd.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        buskProd.setPreferredSize(new java.awt.Dimension(600, 30));
        buskProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buskProdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                buskProdKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        jPanel1.add(buskProd, gridBagConstraints);

        botonBusk.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        botonBusk.setForeground(new java.awt.Color(78, 150, 150));
        botonBusk.setText("Buscar");
        botonBusk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuskActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(botonBusk, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        panelBotones.setLayout(new java.awt.GridBagLayout());

        agB.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        agB.setForeground(new java.awt.Color(78, 150, 150));
        agB.setText("Agregar");
        agB.setPreferredSize(new java.awt.Dimension(125, 33));
        agB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 30);
        panelBotones.add(agB, gridBagConstraints);

        eliB.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        eliB.setForeground(new java.awt.Color(78, 150, 150));
        eliB.setText("Eliminar");
        eliB.setPreferredSize(new java.awt.Dimension(125, 33));
        eliB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 30);
        panelBotones.add(eliB, gridBagConstraints);

        actB.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        actB.setForeground(new java.awt.Color(78, 150, 150));
        actB.setText("Actualizar");
        actB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 30);
        panelBotones.add(actB, gridBagConstraints);

        add(panelBotones, java.awt.BorderLayout.EAST);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(540, 402));

        tablaVentas.setFont(new java.awt.Font("Noto Serif", 0, 14)); // NOI18N
        tablaVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Producto", "Cantidad", "Precio Mayoreo", "Precio Menudeo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaVentas);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void eliBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliBActionPerformed
        // TODO add your handling code here:
        
        if(tablaVentas.getSelectedRow() != -1){
            int resp = Interfaz.JOptionYesNo("Â¿Estas seguro de eliminar esta fila?", "Eliminar");
            if(resp == 0){
            int a = tablaVentas.getSelectedRow();
            eliminarElementos(a);
            modelo.removeRow(tablaVentas.getSelectedRow());
            }
        }
        else
            Interfaz.JOption("Debe seleccionar la fila que desea eliminar", "Error");
    }//GEN-LAST:event_eliBActionPerformed

    private void agBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agBActionPerformed
        // TODO add your handling code here:
        codp.setText("");
        nom.setText("");
        precU.setText("");
        precM.setText("");
        cadd.setText("");
        hechoIns.setVisible(true);
        hechoAct.setVisible(false);
        jDialog1.setVisible(true);
    }//GEN-LAST:event_agBActionPerformed

    private void actBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actBActionPerformed
        // ACTUALIZAR
        if(tablaVentas.getSelectedRow() != -1){
            int a = tablaVentas.getSelectedRow();
            hechoIns.setVisible(false);
            hechoAct.setVisible(true);
            //MOSTRAR LOS DATOS EN EL FIELD
            mostrarDAct(a);
            jDialog1.setVisible(true);
        }
        else
            JOptionPane.showMessageDialog(null,"Debe seleccionar la fila que desea actualizar");
    }//GEN-LAST:event_actBActionPerformed

    private void buskProdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buskProdKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.letrasMayus(letra) && !Cake.letrasMinus(letra) && !Cake.numeros(letra) && !(Cake.inicioEspacios(letra))){
            evt.consume();
        }
        
        if(!(buskProd.getText().isEmpty())){
            if(Cake.espacios(buskProd.getText(), letra)){
                evt.consume();
            }
        }
        else{
            if(Cake.inicioEspacios(letra)){
                evt.consume();
            }
        }
        
        if(Cake.tamaÃ±o(buskProd.getText(), 30)){
            evt.consume();
        }
    }//GEN-LAST:event_buskProdKeyTyped

    private void hechoInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hechoInsActionPerformed
        // TODO add your handling code here:
        if(codp.getText().isEmpty() || nom.getText().isEmpty() || precU.getText().isEmpty() || cadd.getText().isEmpty()){
            javax.swing.JOptionPane.showMessageDialog(null, "Todos los campos deben ser completados", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else{
            if(!estaEnInv()){
                guardarElementos();
                mostrarTabla();
                jDialog1.setVisible(false);
            } else{
                javax.swing.JOptionPane.showMessageDialog(null, "El cÃ³digo del producto que intenta insertar \nya pertenece a un producto existente", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_hechoInsActionPerformed

    private void hechoActActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hechoActActionPerformed
        // TODO add your handling code here:
        if(codp.getText().isEmpty() || nom.getText().isEmpty() || precU.getText().isEmpty() || cadd.getText().isEmpty()){
            javax.swing.JOptionPane.showMessageDialog(null, "Todos los campos deben ser completados", "Error",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else{
            int a = tablaVentas.getSelectedRow();
            actualizarElementos(a);
            mostrarTabla();
            jDialog1.setVisible(false);
            
        }
    }//GEN-LAST:event_hechoActActionPerformed

    private void codpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codpKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.letrasMayus(letra) && !Cake.numeros(letra)){
            evt.consume();
        }
        
        if(Cake.tamaÃ±o(codp.getText(), 20)){
            evt.consume();
        }
    }//GEN-LAST:event_codpKeyTyped

    private void nomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.letrasMayus(letra) && !Cake.numeros(letra) && !Cake.letrasMinus(letra) && !(Cake.inicioEspacios(letra))){
            evt.consume();
        }
        
        if(!(nom.getText().isEmpty())){
            if(Cake.espacios(nom.getText(), letra)){
                evt.consume();
            }
        }
        else{
            if(Cake.inicioEspacios(letra)){
                evt.consume();
            }
        }
        
        if(Cake.tamaÃ±o(nom.getText(), 30)){
            evt.consume();
        }
    }//GEN-LAST:event_nomKeyTyped

    private void precUKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precUKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.numeros(letra) && !Cake.inicioPunto(letra)){
            evt.consume();
        }
        
        if(!(precU.getText().isEmpty())){
            if(Cake.hayPuntos(precU.getText()) && letra=='.'){
                evt.consume();
            } else{
                if(Cake.punto(precU.getText(), letra)){
                    evt.consume();
                }
            }
        } else{
            if(Cake.inicioPunto(letra)){
                evt.consume();
            }
        }
        
        if(Cake.tamaÃ±o(precU.getText(), 10)){
            evt.consume();
        }
    }//GEN-LAST:event_precUKeyTyped

    private void caddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_caddKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.numeros(letra)){
            evt.consume();
        }
        
        if(Cake.tamaÃ±o(cadd.getText(), 10)){
            evt.consume();
        }
    }//GEN-LAST:event_caddKeyTyped

    private void precMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precMKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.numeros(letra) && !Cake.inicioPunto(letra)){
            evt.consume();
        }
        
        if(!(precM.getText().isEmpty())){
            if(Cake.hayPuntos(precM.getText()) && letra=='.'){
                evt.consume();
            } else{
                if(Cake.punto(precM.getText(), letra)){
                    evt.consume();
                }
            }
        } else{
            if(Cake.inicioPunto(letra)){
                evt.consume();
            }
        }
        
        if(Cake.tamaÃ±o(precM.getText(), 10)){
            evt.consume();
        }
    }//GEN-LAST:event_precMKeyTyped

    private void botonBuskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuskActionPerformed
        mostrarTabla();
    }//GEN-LAST:event_botonBuskActionPerformed

    private void buskProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buskProdKeyReleased
        if(evt.getKeyChar() == java.awt.event.KeyEvent.VK_BACK_SPACE)
            botonBusk.setSelected(false);
    }//GEN-LAST:event_buskProdKeyReleased
    
    //TABLAS
    public final void mostrarTabla(){
        limpiarTabla();
        String inst = "SELECT * FROM producto;";
        if(botonBusk.isSelected() && !buskProd.getText().isEmpty()){
            inst = buscarProd();
        } else if(botonBusk.isSelected() && buskProd.getText().isEmpty()){
            botonBusk.setSelected(false);
        }
        llenarTabla(inst);
    }
    
    public void llenarTabla(String instruccion){
        java.sql.ResultSet rs = conect.query(instruccion);
        if(rs != null){
            try{
                while(rs.next()){
                    modelo.addRow( new Object[]{rs.getString("idproducto"), rs.getString("nombre"), rs.getInt("cantidad"), 
                        rs.getDouble("precio_mayoreo"), rs.getDouble("precio_menudeo")});
                }
            }catch(Exception e){
                System.out.println("Ha ocurrido un error");
            }
        }
    }
    
    public void limpiarTabla(){
        int a=modelo.getRowCount();    
        while(a!=0){ 
            if(a!=0)
                modelo.removeRow(0);                      
            a=modelo.getRowCount();
        }
    }
    
    public void eliminarElementos(int a){
        String elemento = "" + modelo.getValueAt(a, 0);
        String instruccion = "DELETE FROM producto";
        instruccion = instruccion + " WHERE idproducto='" + elemento + "';";
        
        conect.inst(instruccion);
    }
    
    public void guardarElementos(){
        String[] campos = {codp.getText(), nom.getText(), cadd.getText(), precM.getText(), precU.getText()};
        conect.insertarProducto(campos);
    }
    
    public boolean estaEnInv(){
        boolean band = true;
        java.sql.ResultSet rs = conect.query("SELECT * FROM producto WHERE idproducto='" + codp.getText() + "'");
        try{
            if(!rs.isBeforeFirst()){
                band = false;
            }
        } catch(Exception e){
            System.out.println("Error");
        }
        return band;
    }
    
    public String buscarProd(){
        String instruccion = "SELECT * FROM producto WHERE nombre LIKE '%" + buskProd.getText() + "%';";
        return instruccion;
    }
    
    public void actualizarElementos(int a){
        String instruccion = "UPDATE producto";
        String elemento = "" + modelo.getValueAt(a, 0);
        
        String[] campos = {codp.getText(), nom.getText(), cadd.getText(), precM.getText(), precU.getText()};
        
        instruccion = instruccion + " SET idproducto='" + campos[0] + "', nombre='" + campos[1] + "', cantidad=" + campos[2]
                + ", precio_mayoreo=" + campos[3] + ", precio_menudeo=" + campos[4];
        instruccion = instruccion + " WHERE idproducto='" + elemento + "';";
        System.out.println(instruccion);
        
        conect.inst(instruccion);
    }
    
    public void mostrarDAct(int a){
        String elemento = "" + modelo.getValueAt(a, 0);
        String instruccion = "SELECT * FROM producto WHERE idproducto='" + elemento + "';";
        System.out.println(instruccion);
        java.sql.ResultSet rs = conect.query(instruccion);
        if(rs!=null){
            try {
                while(rs.next()){
                    codp.setText(rs.getString("idproducto"));
                    nom.setText(rs.getString("nombre"));
                    precU.setText("" + rs.getDouble("precio_menudeo"));
                    precM.setText("" + rs.getDouble("precio_mayoreo"));
                    cadd.setText("" + rs.getInt("cantidad"));
                }
            } catch (java.sql.SQLException ex) {
                System.out.println("Error");
            }
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actB;
    private javax.swing.JButton agB;
    private javax.swing.JToggleButton botonBusk;
    private javax.swing.JFormattedTextField buskProd;
    private javax.swing.JFormattedTextField cadd;
    private javax.swing.JFormattedTextField codp;
    private javax.swing.JButton eliB;
    private javax.swing.JButton hechoAct;
    private javax.swing.JButton hechoIns;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField nom;
    public static javax.swing.JPanel panelBotones;
    private javax.swing.JFormattedTextField precM;
    private javax.swing.JFormattedTextField precU;
    public static javax.swing.JTable tablaVentas;
    // End of variables declaration//GEN-END:variables
}
