
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author 76905
 */
public class VentasP extends javax.swing.JPanel {

    String id_cliente="";
    
    static Double precT = 0.0;
    DefaultTableModel modelo = new DefaultTableModel();
    DefaultTableModel modeloBusc = new DefaultTableModel();
    DefaultTableModel modeloCli = new DefaultTableModel();
    DefaultTableModel modeloProdP = new DefaultTableModel();
    
    ConexionBD conect = new ConexionBD();
    String idTemV = "";
    
    /**
     * Creates new form Ventas
     */
    public VentasP() {
        initComponents();
        modelo = (DefaultTableModel)tablaVentas.getModel();
        modeloBusc = (DefaultTableModel)tablaBusc.getModel();
        modeloCli = (DefaultTableModel)tablaCli.getModel();
        modeloProdP = (DefaultTableModel)tablaProdPocos.getModel();
        totalLabel.setText("Total: " + precT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        ventaDialog = new javax.swing.JDialog();
        panelAct = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        codp = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        cantP = new javax.swing.JFormattedTextField();
        hechoAct = new javax.swing.JButton();
        panelCamb = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        totalCT = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        recCT = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        cambCT = new javax.swing.JFormattedTextField();
        cancelarB = new javax.swing.JButton();
        hechoCamb = new javax.swing.JButton();
        regVentaDialog = new javax.swing.JDialog();
        panelRegVenta = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        curpCliente = new javax.swing.JFormattedTextField();
        labelinc = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaCli = new javax.swing.JTable();
        Reg = new javax.swing.JButton();
        prodPocosDialog = new javax.swing.JDialog();
        panelProdPoc = new javax.swing.JPanel();
        labelinc1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaProdPocos = new javax.swing.JTable();
        hechoAct1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        codigoProd = new javax.swing.JFormattedTextField();
        cantidadProd = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        reg = new javax.swing.JButton();
        ventaReali = new javax.swing.JButton();
        elim = new javax.swing.JButton();
        actB = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVentas = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        Busc = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaBusc = new javax.swing.JTable();

        ventaDialog.setTitle("Venta");
        ventaDialog.setAlwaysOnTop(true);
        ventaDialog.setMinimumSize(new java.awt.Dimension(400, 300));
        ventaDialog.setModal(true);
        ventaDialog.setResizable(false);
        ventaDialog.setSize(new java.awt.Dimension(400, 300));
        ventaDialog.getContentPane().setLayout(new java.awt.CardLayout());

        panelAct.setLayout(new java.awt.GridLayout(0, 1));

        jLabel2.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(78, 150, 150));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CÃ³digo del Producto:");
        panelAct.add(jLabel2);

        codp.setEditable(false);
        codp.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        codp.setPreferredSize(new java.awt.Dimension(200, 35));
        panelAct.add(codp);

        jLabel7.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(78, 150, 150));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Cantidad: ");
        panelAct.add(jLabel7);

        cantP.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        cantP.setPreferredSize(new java.awt.Dimension(200, 35));
        cantP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantPKeyTyped(evt);
            }
        });
        panelAct.add(cantP);

        hechoAct.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        hechoAct.setForeground(new java.awt.Color(78, 150, 150));
        hechoAct.setText("Hecho");
        hechoAct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hechoActActionPerformed(evt);
            }
        });
        panelAct.add(hechoAct);
        hechoAct.setVisible(false);

        ventaDialog.getContentPane().add(panelAct, "card2");

        panelCamb.setLayout(new java.awt.GridLayout(4, 2));

        jLabel5.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(78, 150, 150));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Total: $");
        panelCamb.add(jLabel5);

        totalCT.setEditable(false);
        totalCT.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        totalCT.setPreferredSize(new java.awt.Dimension(200, 35));
        panelCamb.add(totalCT);

        jLabel6.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(78, 150, 150));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Recibido: $");
        panelCamb.add(jLabel6);

        recCT.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        recCT.setPreferredSize(new java.awt.Dimension(200, 35));
        recCT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                recCTKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                recCTKeyTyped(evt);
            }
        });
        panelCamb.add(recCT);

        jLabel8.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(78, 150, 150));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Cambio: $");
        panelCamb.add(jLabel8);

        cambCT.setEditable(false);
        cambCT.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        cambCT.setPreferredSize(new java.awt.Dimension(200, 35));
        panelCamb.add(cambCT);

        cancelarB.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        cancelarB.setForeground(new java.awt.Color(78, 150, 150));
        cancelarB.setText("Cancelar");
        cancelarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBActionPerformed(evt);
            }
        });
        panelCamb.add(cancelarB);
        hechoAct.setVisible(false);

        hechoCamb.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        hechoCamb.setForeground(new java.awt.Color(78, 150, 150));
        hechoCamb.setText("Hecho");
        hechoCamb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hechoCambActionPerformed(evt);
            }
        });
        panelCamb.add(hechoCamb);
        hechoAct.setVisible(false);

        ventaDialog.getContentPane().add(panelCamb, "card3");

        ventaDialog.setLocationRelativeTo(null);

        regVentaDialog.setTitle("Venta");
        regVentaDialog.setMinimumSize(new java.awt.Dimension(500, 500));
        regVentaDialog.setModal(true);
        regVentaDialog.setResizable(false);
        regVentaDialog.setSize(new java.awt.Dimension(500, 500));
        regVentaDialog.getContentPane().setLayout(new java.awt.CardLayout());

        panelRegVenta.setLayout(new java.awt.GridBagLayout());

        jLabel9.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(78, 150, 150));
        jLabel9.setText("CURP cliente:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelRegVenta.add(jLabel9, gridBagConstraints);

        curpCliente.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        curpCliente.setPreferredSize(new java.awt.Dimension(250, 30));
        curpCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                curpClienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                curpClienteKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelRegVenta.add(curpCliente, gridBagConstraints);

        labelinc.setFont(new java.awt.Font("Noto Serif", 0, 12)); // NOI18N
        labelinc.setForeground(new java.awt.Color(204, 0, 51));
        labelinc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelinc.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        panelRegVenta.add(labelinc, gridBagConstraints);

        jScrollPane3.setPreferredSize(new java.awt.Dimension(450, 300));

        tablaCli.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        tablaCli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Curp", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCliMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaCli);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        panelRegVenta.add(jScrollPane3, gridBagConstraints);

        Reg.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        Reg.setForeground(new java.awt.Color(78, 150, 150));
        Reg.setText("Registrar nuevo cliente");
        Reg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        panelRegVenta.add(Reg, gridBagConstraints);

        regVentaDialog.getContentPane().add(panelRegVenta, "card2");

        regVentaDialog.setLocationRelativeTo(null);

        prodPocosDialog.setTitle("Alerta");
        prodPocosDialog.setAlwaysOnTop(true);
        prodPocosDialog.setMinimumSize(new java.awt.Dimension(550, 450));
        prodPocosDialog.setModal(true);
        prodPocosDialog.setResizable(false);
        prodPocosDialog.setSize(new java.awt.Dimension(550, 450));
        prodPocosDialog.getContentPane().setLayout(new java.awt.CardLayout());

        panelProdPoc.setLayout(new java.awt.GridBagLayout());

        labelinc1.setFont(new java.awt.Font("Noto Serif", 0, 12)); // NOI18N
        labelinc1.setForeground(new java.awt.Color(204, 0, 51));
        labelinc1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelinc1.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        panelProdPoc.add(labelinc1, gridBagConstraints);

        jScrollPane4.setPreferredSize(new java.awt.Dimension(500, 300));

        tablaProdPocos.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        tablaProdPocos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Nombre", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaProdPocos);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        panelProdPoc.add(jScrollPane4, gridBagConstraints);

        hechoAct1.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        hechoAct1.setForeground(new java.awt.Color(78, 150, 150));
        hechoAct1.setText("Aceptar");
        hechoAct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hechoAct1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        panelProdPoc.add(hechoAct1, gridBagConstraints);
        hechoAct.setVisible(false);

        jLabel11.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(78, 150, 150));
        jLabel11.setText("Quedan pocos productos en el inventario:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        panelProdPoc.add(jLabel11, gridBagConstraints);

        prodPocosDialog.getContentPane().add(panelProdPoc, "card2");

        prodPocosDialog.setLocationRelativeTo(null);

        setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Noto Serif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(78, 150, 150));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ventas");
        jPanel1.add(jLabel1);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(78, 150, 150));
        jLabel3.setText("CÃ³digo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel3, gridBagConstraints);

        codigoProd.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        codigoProd.setPreferredSize(new java.awt.Dimension(150, 30));
        codigoProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigoProdKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(codigoProd, gridBagConstraints);

        cantidadProd.setFont(new java.awt.Font("Noto Serif", 0, 18)); // NOI18N
        cantidadProd.setPreferredSize(new java.awt.Dimension(150, 30));
        cantidadProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadProdKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(cantidadProd, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(78, 150, 150));
        jLabel4.setText("Cantidad:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(jLabel4, gridBagConstraints);

        totalLabel.setFont(new java.awt.Font("Noto Serif", 1, 40)); // NOI18N
        totalLabel.setForeground(new java.awt.Color(78, 150, 150));
        totalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalLabel.setText("Total: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 120, 10);
        jPanel2.add(totalLabel, gridBagConstraints);

        reg.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        reg.setForeground(new java.awt.Color(78, 150, 150));
        reg.setText("Registrar");
        reg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 10, 10);
        jPanel2.add(reg, gridBagConstraints);

        ventaReali.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        ventaReali.setForeground(new java.awt.Color(78, 150, 150));
        ventaReali.setText("Venta Hecha");
        ventaReali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ventaRealiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(50, 10, 10, 10);
        jPanel2.add(ventaReali, gridBagConstraints);

        elim.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        elim.setForeground(new java.awt.Color(78, 150, 150));
        elim.setText("Eliminar");
        elim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elimActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(elim, gridBagConstraints);

        actB.setFont(new java.awt.Font("Noto Serif", 1, 18)); // NOI18N
        actB.setForeground(new java.awt.Color(78, 150, 150));
        actB.setText("Actualizar");
        actB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel2.add(actB, gridBagConstraints);

        add(jPanel2, java.awt.BorderLayout.LINE_END);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(540, 402));

        tablaVentas.setFont(new java.awt.Font("Noto Serif", 0, 14)); // NOI18N
        tablaVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Producto", "Cantidad", "Tipo de Venta", "Precio Dado", "Precio Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaVentas);

        jPanel3.add(jScrollPane1);

        jLabel10.setFont(new java.awt.Font("Noto Serif", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(78, 150, 150));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Buscar");
        jLabel10.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel3.add(jLabel10);

        Busc.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        Busc.setMinimumSize(new java.awt.Dimension(150, 30));
        Busc.setPreferredSize(new java.awt.Dimension(150, 30));
        Busc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BuscKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BuscKeyTyped(evt);
            }
        });
        jPanel3.add(Busc);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(452, 200));

        tablaBusc.setFont(new java.awt.Font("Noto Serif", 0, 14)); // NOI18N
        tablaBusc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Producto", "Precio Menudeo", "Precio Mayoreo", "En Existencia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaBusc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaBuscMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaBusc);

        jPanel3.add(jScrollPane2);

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void cantPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantPKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.numeros(letra)){
            evt.consume();
        }

        if(Cake.tamaÃ±o(cantP.getText(), 10)){
            evt.consume();
        }
    }//GEN-LAST:event_cantPKeyTyped

    private void hechoActActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hechoActActionPerformed
        if(codp.getText().isEmpty() || cantP.getText().isEmpty()){
            Mise.JOption("Todos los campos deben ser completados", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            String[] datos = {codp.getText(), cantP.getText()};
            conect.insertarVentaTemp(datos, false); //Se actualizan los datos en la venta temporal
            mostrarTablaVentaT();
            mostrarBusqueda("");
            ventaDialog.setVisible(false);
        }
    }//GEN-LAST:event_hechoActActionPerformed

    private void recCTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recCTKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.numeros(letra) && !Cake.inicioPunto(letra)){
            evt.consume();
        }
        
        if(!(recCT.getText().isEmpty())){
            if(Cake.hayPuntos(recCT.getText()) && letra=='.'){
                evt.consume();
            } else{
                if(Cake.punto(recCT.getText(), letra)){
                    evt.consume();
                }
            }
        } else{
            if(Cake.inicioPunto(letra)){
                evt.consume();
            }
        }
        
        if(Cake.tamaÃ±o(recCT.getText(), 10)){
            evt.consume();
        }
    }//GEN-LAST:event_recCTKeyTyped

    private void hechoCambActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hechoCambActionPerformed
        if(recCT.getText().isEmpty()){
            Mise.JOption("El campo no puede estar vacÃ­o", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Double a = Double.valueOf(recCT.getText());
            Double b = Double.valueOf(totalCT.getText());
            if(a < b){
                Mise.JOption("Lo recibido no debe ser menor que el total", "Error", JOptionPane.ERROR_MESSAGE);
            } else{
                idTemV = conect.registrarVenta(Interfaz.idVendedor,id_cliente); //Se registra la venta
                //generarTicket(); //Se genera el ticket
                Mise.limpiarTabla(modelo); //Se limpia el modelo
                precT = 0.0;
                totalLabel.setText("Total: " + precT);
                ventaDialog.setVisible(false);
                //EN ESTA PARTE DEBERIA MOSTRAR LA ALERTAA SI HAY POCOS PRODUCTOS
                if(conect.hayPocosProductos()){
                    mostrarProdPocos();
                    prodPocosDialog.setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_hechoCambActionPerformed

    private void cancelarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBActionPerformed
        ventaDialog.setVisible(false);
    }//GEN-LAST:event_cancelarBActionPerformed

    private void recCTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recCTKeyReleased
        if(!recCT.getText().isEmpty()){
            cambCT.setText("" + cambioT(recCT.getText()));
        }
    }//GEN-LAST:event_recCTKeyReleased

    private void BuscKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BuscKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.letrasMayus(letra) && !Cake.letrasMinus(letra) && !Cake.numeros(letra) && !(Cake.inicioEspacios(letra))){
            evt.consume();
        }
        
        if(!(Busc.getText().isEmpty())){
            if(Cake.espacios(Busc.getText(), letra)){
                evt.consume();
            }
        }
        else{
            if(Cake.inicioEspacios(letra)){
                evt.consume();
            }
        }
        
        if(Cake.tamaÃ±o(Busc.getText(), 30)){
            evt.consume();
        }
    }//GEN-LAST:event_BuscKeyTyped

    private void actBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actBActionPerformed
        if(tablaVentas.getSelectedRow() != -1){
            int a = tablaVentas.getSelectedRow();
            hechoAct.setVisible(true);
            //MOSTRAR LOS DATOS EN EL FIELD
            mostrarDAct(a);
            panelAct.setVisible(true);
            panelCamb.setVisible(false);
            ventaDialog.setVisible(true);
        } else{
            Mise.JOption("Debe seleccionar la fila que desea actualizar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_actBActionPerformed

    private void elimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elimActionPerformed
        int a = tablaVentas.getSelectedRow();
        if(a != -1){
            conect.eliminarVentaTemp("" + modelo.getValueAt(a, 0)); //se elimina el producto
            mostrarTablaVentaT();
            mostrarBusqueda("");
        }
        else {
            Mise.JOption("Debe seleccionar la fila que desea eliminar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_elimActionPerformed

    private void ventaRealiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ventaRealiActionPerformed
        if(modelo.getRowCount() != 0){
            mostrarClientes("");
            regVentaDialog.setVisible(true);
        } else{
            Mise.JOption("No es posible registrar una venta sin productos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ventaRealiActionPerformed

    private void regActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regActionPerformed
        if(!codigoProd.getText().isEmpty() && !cantidadProd.getText().isEmpty()){
            String[] datos = {codigoProd.getText(), cantidadProd.getText()};
            conect.insertarVentaTemp(datos, true); //Se inserta el producto en la tabla
            mostrarTablaVentaT();
            //Se limpian los campos de texto
            codigoProd.setText("");
            cantidadProd.setText("");
            Busc.setText("");
            mostrarBusqueda("");
        } else{
            Mise.JOption("Debe llenar los dos campos de texto", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_regActionPerformed

    private void cantidadProdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadProdKeyTyped
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if(!Cake.numeros(letra)){
            evt.consume();
        }

        if(Cake.tamaÃ±o(cantidadProd.getText(), 10)){
            evt.consume();
        }
    }//GEN-LAST:event_cantidadProdKeyTyped

    private void codigoProdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoProdKeyTyped
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if(!Cake.letrasMayus(letra) && !Cake.numeros(letra) && !Cake.guionShort(letra)){
            evt.consume();
        }

        if(Cake.tamaÃ±o(codigoProd.getText(), 20)){
            evt.consume();
        }
    }//GEN-LAST:event_codigoProdKeyTyped

    private void BuscKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BuscKeyReleased
        String palabra = Busc.getText();
        Mise.limpiarTabla(modeloBusc);
        String instruccion = "SELECT * FROM producto WHERE nombre LIKE '%" + palabra + "%' ORDER BY id_producto;";
        mostrarBusqueda(instruccion);
    }//GEN-LAST:event_BuscKeyReleased

    private void tablaBuscMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaBuscMouseClicked
        if(tablaBusc.getSelectedRow() != -1){
            codigoProd.setText((String)tablaBusc.getValueAt(tablaBusc.getSelectedRow(), 0));
        }
    }//GEN-LAST:event_tablaBuscMouseClicked

    private void tablaCliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCliMouseClicked
        id_cliente = "" + tablaCli.getValueAt(tablaCli.getSelectedRow(), 0);
        precT = conect.sumaVentaTemp();
        recCT.setText("");
        totalCT.setText("" + precT);
        cambCT.setText("0.0");
        panelAct.setVisible(false);
        panelCamb.setVisible(true);
        regVentaDialog.setVisible(false);
        ventaDialog.setVisible(true);
    }//GEN-LAST:event_tablaCliMouseClicked

    private void curpClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_curpClienteKeyTyped
        char letra = evt.getKeyChar();
        if(!Cake.letrasMayus(letra) && !Cake.numeros(letra)){
            evt.consume();
        }

        if(Cake.tamaÃ±o(curpCliente.getText(), 18)){
            evt.consume();
        }
    }//GEN-LAST:event_curpClienteKeyTyped

    private void curpClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_curpClienteKeyReleased
        String pal = curpCliente.getText();
        mostrarClientes("SELECT * FROM cliente WHERE estatus='Activo' AND id_cliente LIKE '% " + pal +"%';");
    }//GEN-LAST:event_curpClienteKeyReleased

    private void hechoAct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hechoAct1ActionPerformed
        prodPocosDialog.setVisible(false);
    }//GEN-LAST:event_hechoAct1ActionPerformed
    
    private void RegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegActionPerformed
        // TODO add your handling code here:
        ClientesP.Registro.setVisible(true);
    }//GEN-LAST:event_RegActionPerformed
    
    public Double cambioT(String palabra){
        totalCT.setText("" + precT);
        Double cambioNum = Double.valueOf(palabra);
        if(cambioNum >= precT){
            cambioNum = cambioNum-precT;
        } else {
            cambioNum = 0.0;
        }
        return cambioNum;
    }
    
    public final void mostrarTablaVentaT(){
        Mise.limpiarTabla(modelo);
        java.sql.ResultSet rs = conect.query("SELECT * FROM venta_temp");
        try{
            while(rs.next()){
                modelo.addRow( new Object[]{rs.getString("id_producto"), rs.getString("nombre_p"), rs.getInt("cantidad_prod"), 
                    rs.getString("tipo_venta"), rs.getDouble("precio_dado"), rs.getDouble("precio_total")});
            }
        }catch(java.sql.SQLException e){
            System.out.println("Error al tratar de llenar la tabla venta temporal");
        }
        //Se actualiza la suma total
        precT = conect.sumaVentaTemp();
        totalLabel.setText("Total: " + precT);
    }
    
    public void mostrarBusqueda(String instruccion){
        if(instruccion.equals("")){
            instruccion = "SELECT * FROM producto ORDER BY id_producto";
        }
        Mise.limpiarTabla(modeloBusc);
        java.sql.ResultSet rs = conect.query(instruccion);
        try{
            while(rs.next()){
                modeloBusc.addRow( new Object[]{rs.getString("id_producto"), rs.getString("nombre"), rs.getDouble("precio_menudeo"), 
                    rs.getDouble("precio_mayoreo"), rs.getInt("cantidad")});
            }
        }catch(java.sql.SQLException e){
            System.out.println("Error en la tabla de busqueda de productos");
        }
    }
    public void llamar(){
        mostrarClientes("");
    }
    
    public void mostrarClientes(String instruccion){
        if(instruccion.equals("")){
            instruccion = "SELECT * FROM cliente WHERE estatus='Activo';";
        }
        Mise.limpiarTabla(modeloCli);
        java.sql.ResultSet rs = conect.query(instruccion);
        try{
            while(rs.next()){
                modeloCli.addRow( new Object[]{rs.getString("id_cliente"), rs.getString("nombre")});
            }
        }catch(java.sql.SQLException e){
            System.out.println("Error al mostrar la tabal de clientes");
        }
    }
    
    public void mostrarProdPocos(){
        Mise.limpiarTabla(modeloProdP);
        java.sql.ResultSet rs = conect.query("SELECT * FROM producto WHERE cantidad<=12 ORDER BY id_producto");
        try{
            while(rs.next()){
                modeloProdP.addRow(new Object[]{rs.getString("id_producto"), rs.getString("nombre"), rs.getInt("cantidad")});
            }
        } catch(java.sql.SQLException e){
            System.out.println("Error al mostrar la tabla pocos productos");
        }
    }
    
    public void mostrarDAct(int a){
        String elemento = "" + modelo.getValueAt(a, 0);
        String canti = "" + modelo.getValueAt(a, 2);
        codp.setText(elemento);
        cantP.setText(canti);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Busc;
    private javax.swing.JButton Reg;
    private javax.swing.JButton actB;
    private javax.swing.JFormattedTextField cambCT;
    private javax.swing.JButton cancelarB;
    private javax.swing.JFormattedTextField cantP;
    private javax.swing.JFormattedTextField cantidadProd;
    private javax.swing.JFormattedTextField codigoProd;
    private javax.swing.JFormattedTextField codp;
    private javax.swing.JFormattedTextField curpCliente;
    private javax.swing.JButton elim;
    private javax.swing.JButton hechoAct;
    private javax.swing.JButton hechoAct1;
    private javax.swing.JButton hechoCamb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JLabel labelinc;
    public static javax.swing.JLabel labelinc1;
    private javax.swing.JPanel panelAct;
    private javax.swing.JPanel panelCamb;
    private javax.swing.JPanel panelProdPoc;
    private javax.swing.JPanel panelRegVenta;
    private javax.swing.JDialog prodPocosDialog;
    private javax.swing.JFormattedTextField recCT;
    private javax.swing.JButton reg;
    private javax.swing.JDialog regVentaDialog;
    private javax.swing.JTable tablaBusc;
    private javax.swing.JTable tablaCli;
    private javax.swing.JTable tablaProdPocos;
    private javax.swing.JTable tablaVentas;
    private javax.swing.JFormattedTextField totalCT;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JDialog ventaDialog;
    private javax.swing.JButton ventaReali;
    // End of variables declaration//GEN-END:variables
}
